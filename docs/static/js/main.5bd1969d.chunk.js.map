{"version":3,"sources":["Beer/index.tsx","Food/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Beer","useState","beer","setBeer","className","onClick","axios","get","then","resposta","data","undefined","map","item","src","image_url","alt","name","tagline","description","id","Foods","foods","setFoods","foodCategories","setFoodCategories","selectedCategorie","setSelectedCategorie","input","setInput","useEffect","categories","meals","type","placeholder","onChange","e","target","value","strCategory","idCategory","food","strMealThumb","strMeal","idMeal","App","Food","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAkCeA,EA9BF,WAAO,IAAD,EAEOC,qBAFP,mBAEVC,EAFU,KAEJC,EAFI,KASjB,OACE,sBAAKC,UAAU,2BAAf,UAEE,kDACA,wBAAQC,QATE,WACZC,IAAMC,IAAI,gDACPC,MAAK,SAAAC,GAAQ,OAAIN,EAAQM,EAASC,UAOnC,iCACWC,IAATT,GACF,qBAAKE,UAAU,aAAf,SACIF,EAAKU,KAAI,SAAAC,GAAI,OACb,sBAAKT,UAAU,OAAf,UACE,qBAAKU,IAAKD,EAAKE,UAAWC,IAAKH,EAAKI,OACpC,6BAAKJ,EAAKI,OACV,+BAAOJ,EAAKK,UACZ,gCAAQL,EAAKM,gBAJYN,EAAKO,aC4C3BC,EA5DD,WAAO,IAAD,EAEQpB,mBAAmB,IAF3B,mBAEXqB,EAFW,KAEJC,EAFI,OAG0BtB,mBAAsB,IAHhD,mBAGXuB,EAHW,KAGKC,EAHL,OAIgCxB,mBAAiB,IAJjD,mBAIXyB,EAJW,KAIQC,EAJR,OAKQ1B,mBAAiB,IALzB,mBAKX2B,EALW,KAKJC,EALI,KA2BlB,OApBAC,qBAAU,WACRxB,IAAMC,IAAI,0DACPC,MAAK,SAAAC,GAAQ,OAAIgB,EAAkBhB,EAASC,KAAKqB,iBACnD,IAEHD,qBAAU,WAEiB,KAAtBJ,GACDpB,IAAMC,IAAN,+DAAkEmB,IAC/DlB,MAAK,SAAAC,GAAQ,OAAIc,EAASd,EAASC,KAAKsB,YAE5C,CAACN,IAEJI,qBAAU,WACK,KAAVF,GACDtB,IAAMC,IAAN,+DAAkEqB,IAC/DpB,MAAK,SAAAC,GAAQ,OAAIc,EAASd,EAASC,KAAKsB,YAE5C,CAACJ,IAGF,sBAAKxB,UAAU,2BAAf,UACE,iDACA,2FAEE,uBAAO6B,KAAK,OAAOC,YAAY,qBAAqBC,SAAU,SAACC,GAAD,OAAOP,EAASO,EAAEC,OAAOC,aAGzF,6BAEuB,OAAnBd,GACAA,EAAeZ,KAAI,SAACmB,GAAD,OACjB,oBAAgC1B,QAAS,kBAAMsB,EAAqBI,EAAWQ,cAA/E,SAA8FR,EAAWQ,aAAhGR,EAAWS,iBAIF,OAAtBd,GAA+B,oDAAsB,iCAASA,OAEhE,qBAAKtB,UAAU,iBAAf,SAEc,OAAVkB,GACAA,EAAMV,KAAI,SAAC6B,GAAD,OACR,sBAAKrC,UAAU,YAAf,UACE,qBAAKU,IAAK2B,EAAKC,eACf,4BAAID,EAAKE,YAFqBF,EAAKG,iBCvClCC,MATf,WACE,OACE,sBAAKzC,UAAU,MAAf,UACE,cAAC0C,EAAD,IACA,cAAC,EAAD,QCISC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5bd1969d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios'\nimport { Beers } from '../types/beer'\n\nconst Beer = () => {\n\n  const [beer, setBeer] = useState<Beers[]>()\n\n  const busca = () => {\n    axios.get(\"https://api.punkapi.com/v2/beers/?per_page=8\")\n      .then(resposta => setBeer(resposta.data))\n  }\n\n  return (\n    <div className=\"food-beer-list food-shop\">\n      \n      <h1>Tipos de Cerveja</h1>\n      <button onClick={busca}>Buscar Cerveja</button>\n      { beer !== undefined && \n      <div className=\"beers-list\">\n        { beer.map(item => (\n          <div className=\"beer\" key={item.id}>\n            <img src={item.image_url} alt={item.name} />\n            <h3>{item.name}</h3>\n            <span>{item.tagline}</span>\n            <small>{item.description}</small>\n          </div>\n        ))}\n      </div>\n    }\n    </div>\n  );\n}\n\nexport default Beer;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios'\nimport { Comida } from '../types/comidas'\nimport { Categoria } from '../types/categoria'\n\nconst Foods = () => {\n\n  const [foods, setFoods] = useState<Comida[]>([])\n  const [foodCategories, setFoodCategories] = useState<Categoria[]>([])\n  const [selectedCategorie, setSelectedCategorie] = useState<String>(\"\")\n  const [input, setInput] = useState<String>(\"\")\n\n  useEffect(() => {\n    axios.get('https://www.themealdb.com/api/json/v1/1/categories.php')\n      .then(resposta => setFoodCategories(resposta.data.categories))\n  }, [])\n\n  useEffect(() => {\n\n    if(selectedCategorie !== \"\") {\n      axios.get(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${selectedCategorie}`)\n        .then(resposta => setFoods(resposta.data.meals))\n    }\n  }, [selectedCategorie])\n\n  useEffect(() => {\n    if(input !== \"\") {\n      axios.get(`https://www.themealdb.com/api/json/v1/1/search.php?s=${input}`)\n        .then(resposta => setFoods(resposta.data.meals))\n    }\n  }, [input])\n\n  return (\n    <div className=\"food-beer-list food-shop\">\n      <h1>Tipos de pratos</h1>\n      <p>\n        Selecione uma categoria ou digite a comida (em inglÃªs):\n        <input type=\"text\" placeholder=\"Digite a comida...\" onChange={(e) => setInput(e.target.value)}/>\n      </p>\n\n      <ul>\n        {\n          foodCategories !== null &&\n          foodCategories.map((categories: any) => (\n            <li key={categories.idCategory} onClick={() => setSelectedCategorie(categories.strCategory)}>{categories.strCategory}</li>\n          ))\n        }\n      </ul>\n      { selectedCategorie !== null &&  <h2>Tipo selecionado: <strong>{selectedCategorie}</strong></h2> }\n      \n      <div className=\"food-container\">\n        { \n          foods !== null &&\n          foods.map((food: any) => (\n            <div className=\"food-item\" key={food.idMeal}>\n              <img src={food.strMealThumb} />\n              <p>{food.strMeal}</p>\n            </div>\n        ))}\n      </div>\n\n    </div>\n  );\n}\n\nexport default Foods;","import React from 'react';\nimport './App.css';\n\nimport Beer from './Beer'\nimport Food from './Food'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Food />\n      <Beer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}